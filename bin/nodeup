#!/usr/bin/env ruby
require 'pathname'
app_path = File.expand_path('../../', Pathname.new(__FILE__).realpath)
log_path = "#{app_path}/logs"
gem_file = "#{app_path}/Gemfile"
ENV['BUNDLE_GEMFILE'] ||= gem_file
require 'bundler/setup'

require 'chef/config'
require 'colorize'
require 'logger'
require 'simple_config'

require 'node'

logger = Logger.new(STDOUT)
logger.formatter = proc do |severity, datetime, _progname, msg|
  date_format = datetime.strftime('%Y-%m-%d %H:%M:%S')
  if severity == 'INFO'
    "[#{date_format}] [#{severity}] #{msg}\n".green
  elsif severity == 'WARN'
    "[#{date_format}] [#{severity}] #{msg}\n".red
  else
    "[#{date_format}] [#{severity}] #{msg}\n"
  end
end

nodes = []
threads = []
SimpleConfig.deploy.count.to_i.times do
  node = Node.new
  threads << Thread.new do
    node.create SimpleConfig.deploy
    File.write("#{log_path}/build_#{node.name}.log", node.output)
    nodes.push node
    node.delete if !node.status && !SimpleConfig.deploy.save
  end
end
threads.each(&:join)

deployed = nodes.select(&:status)
rejected = nodes.reject(&:status)

logger.info 'Bootstrapped the following nodes:' if deployed.any?
deployed.each { |node| logger.info node.name }

logger.warn 'Failed the following nodes:' if rejected.any?
rejected.each do |node|
  logger.warn node.name
  logger.warn "BuildLog: #{ENV['JENKINS_WSLOG_URL']}/build_#{node.name}.log" if ENV['JENKINS_WSLOG_URL']
end

exit 1 if rejected.any?
