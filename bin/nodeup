#!/usr/bin/env ruby
require 'bundler/setup'
require 'common_libs'

# Vars
nodes         = []
threads       = []
deploy_params = SimpleConfig.deploy
node_count    = ENV['NODE_NAME'].empty? ? SimpleConfig.deploy.count.to_i : 1
node_name     = ENV['NODE_NAME'].empty? ? { autogen: SimpleConfig.deploy.chef.role } : { name: ENV['NODE_NAME'].gsub(/\s+/, '') }

node_count.times do
  threads << Thread.new do
    node              = Node.new node_name
    node.role         = deploy_params.chef.role
    node.env          = deploy_params.chef.env
    node.chef_version = deploy_params.chef.version
    node.image        = deploy_params.linode.image
    node.create(flavor: deploy_params.linode.flavor,
                template: BOOTSTRAP_TEMPLATE,
                maintain: deploy_params.maintain)
    File.write("#{LOG_PATH}/build_#{node.name}.log", node.output)
    nodes.push node
    node.delete if !node.status && !deploy_params.save
  end
end
threads.each(&:join)

deployed = nodes.select(&:status)
rejected = nodes.reject(&:status)

LOGGER.info 'Bootstrapped the following nodes:' if deployed.any?
deployed.each do |node|
  LOGGER.info node.name
  if ENV['JENKINS_WSLOG_URL']
    LOGGER.info "BuildLog: #{ENV['JENKINS_WSLOG_URL']}/build_#{node.name}.log"
  else
    puts File.read("#{LOG_PATH}/build_#{node.name}.log")
  end
end

LOGGER.warn 'Failed the following nodes:' if rejected.any?
rejected.each do |node|
  LOGGER.warn node.name
  if ENV['JENKINS_WSLOG_URL']
    LOGGER.warn "BuildLog: #{ENV['JENKINS_WSLOG_URL']}/build_#{node.name}.log"
  else
    puts File.read("#{LOG_PATH}/build_#{node.name}.log")
  end
end

exit 1 if rejected.any?
