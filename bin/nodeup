#!/usr/bin/env ruby

require "bundler/setup"
require 'chef/knife'
require 'slop'
require 'colorize'
require 'mixlib/cli'

opts = Slop.parse do |o|
  # Connection settings
  o.string '-v', '--bootstrap-version', 'bootstrap_version', default: '12.6.0'
  o.string '-u', '--server-url',        'server-url',        default: 'https://chef_url.com'
  o.string '-r', '--role',              'role',              default: 'api-search'
  o.string '-e', '--environment',       'environment',       default: 'linode_alpha'
  o.string '-i', '--image',             'linode-image',      default: '124'                     # Ubuntu 14.04
  o.string '-k', '--kernel',            'linode-kernel',     default: '138'                     # Latest x64
  o.string '-d', '--datacenter',        'linode-datacenter', default: '7'                       # London, England, UK
  o.string '-f', '--flavor',            'linode-flavor',     default: '4'                       # Linode 4096
  o.string '-n', '--num-nodes',         'num-nodes',         default: '1'
  o.string '-ck', '--chef-key',         'chef-key',          default: nil
  o.on '--help', 'print the help' do
    puts o
    exit
  end
end

Chef::Config[:node_name] = 'docker-ci-runner'
Chef::Config[:client_key] = opts[:chef_key]
Chef::Config[:chef_server_url] = 'https://chef_url.com/organizations/ott'
Chef::Config[:knife][:linode_api_key] = 'password'
Chef::Config[:knife][:environment] = opts[:environment]
Chef::Config[:knife][:yes] = ''

nodes = []
threads = []
opts[:num_nodes].to_i.times do
  node_name = opts[:environment] + "-" + opts[:role] + "-" + rand(36**6).to_s(36)
  args = %W{
      linode server create
      --bootstrap-version #{opts[:bootstrap_version]}
      -r role[#{opts[:role]}]
      --linode-image #{opts[:image]}
      --linode-kernel #{opts[:kernel]}
      --linode-datacenter #{opts[:datacenter]}
      --linode-flavor #{opts[:flavor]}
      --linode-node-name #{node_name}
      --node-name #{node_name}
      --bootstrap-template templates/twiket-bootstrap}
  threads << Thread.new(args) do |args|
    begin
      Chef::Knife.run(args)
    rescue Exception => e
      puts e.message.red

      class KnifeCliTemplate
        include Mixlib::CLI
      end

      KnifeCliTemplate.option(:yes, :long => "--yes")

      Chef::Knife.run(%W{linode server delete --purge #{node_name}}, KnifeCliTemplate.options)
    else
      nodes.push node_name
    end
  end
end
threads.each {|thr| thr.join }

puts "Bootstrapped the following nodes:"
nodes.each do |node|
  puts node.green
end
